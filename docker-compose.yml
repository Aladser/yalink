services:
  redis:
    image: redis:latest
    container_name: yalink-redis
    restart: on-failure
    expose:
      - "6379"
    networks:
      - projectnet

  db:
    image: postgres:16-alpine
    container_name: yalink-db
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 15s
      retries: 3
      timeout: 5s
    networks:
      - projectnet

  app:
    build: .
    tty: true
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: sh -c  "python manage.py migrate && python manage.py makeusers && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - projectnet

  celery:
    build: .
    tty: true
    env_file:
      - .env
    restart: on-failure
    command: sh -c  "celery -A config worker -l INFO"
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    networks:
      - projectnet

volumes:
  pg_data:
networks:
  projectnet:
    driver: bridge
